from __future__ import print_function
import os
import json
import datetime

fName = os.path.realpath(__file__)
# info_list = ['title', 'date', 'author', 'url', 'pdf']

THIS_IS_AUTOGENERATED = (
    ".. --------------------------------- ..\n"
    "..                                   ..\n"
    "..    THIS FILE IS AUTO GENEREATED   ..\n"
    "..                                   ..\n"
    "..    autodoc.py                     ..\n"
    "..                                   ..\n"
    ".. --------------------------------- ..\n"
)


def make_lectures_page(fpath='content/lectures.json',
                       fout='content/lectures.rst'):

    fpath = os.path.sep.join(fName.split(os.path.sep)[:-2] + [fpath])
    fout = os.path.sep.join(fName.split(os.path.sep)[:-2] + [fout])

    fpath = open(fpath)  # file to write to
    lectures = json.load(fpath)  # lecture json


    print(lectures.keys())
    out = """.. _lectures:

{}


Lectures
========

""".format(THIS_IS_AUTOGENERATED)

    print('\nCreating: lectures.rst')
    f = open(fout, 'w')
    f.write(out)

    for key in range(len(lectures.keys())):  # assumes keys are ints
        lecture = lectures['{key}'.format(key=key)]
        print('   writing lecture {key}'.format(key=key))
        date = list(map(int, lecture['date'].split('-')))
        date = datetime.date(year=date[0], month=date[1], day=date[2])

        info_block = """
*{0:%B} {0:%d}, {0:%Y}*

- `{title} lecture slides <{pdf}>`_
        """.format(date, title=lecture['title'], pdf=lecture['pdf'])

        youtube_block="""
.. raw:: html

    <div style="margin-top:10px; margin-bottom:10px;" align="center">
    <iframe width="560" height="315" src="{url}" frameborder="0" allowfullscreen>
    </iframe>
    </div>


        """.format(url='https://www.youtube.com/embed/'+lecture['youtube']+'?rel=0')

#         info_block = []
#         for info_key in info_list:
#             if lecture.has_key(info_key) is True:
#                 val = lecture[info_key]
#                 if info_key == 'ORCID':
#                     val = "`{val} <{url}>`_".format(val=val, url=ORCID_URL+val)
#                 info_block.append('**{key}:** {val} \n'.format(key=info_key,
#                                                                val=val))

#         info_block = '\n'.join(info_block)

#         if lecture.has_key('avatar') is True:
#             avatar_block = """
# .. image:: {avatar}
#     :width: 150
#     :align: left
#             """.format(avatar=lecture['avatar'])
#         else:
#             avatar_block = ""

        out = """
.. _lecture_{lecture_id}:

{name}
{underline}

{info_block}

{youtube_block}

        """.format(lecture_id=key,
                   name=lecture['title'],
                   underline=len(lecture['title'])*'-',
                   info_block=info_block,
                   youtube_block=youtube_block,
                   )
        f.write(out)

    f.close()

    print('Done writing lectures.rst\n')


if __name__ == '__main__':
    """
        Run the following to create the lecture page.
    """

    make_lectures_page()
